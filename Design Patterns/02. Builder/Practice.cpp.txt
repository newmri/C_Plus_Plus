#include <string>
#include <ostream>
using namespace std;
#include <list>
#include <iostream>

struct Variable
{
	Variable() = default;
	Variable(string name, string type) : name(name), type(type) {}
	string name;
	string type;
};

struct Code
{
	string class_name;
	std::list<Variable> child;
};

class CodeBuilder
{
public:
	CodeBuilder(const string& class_name)
	{
		code.class_name = class_name;
	}

	CodeBuilder& add_field(const string& name, const string& type)
	{
		code.child.push_back({ name, type });
		return *this;
	}

	friend ostream& operator<<(ostream& os, const CodeBuilder& obj)
	{
		os << "class " << obj.code.class_name;
		os << "\n{\n";
		for (const auto& d : obj.code.child)
			os << "  " << d.type << " " << d.name << ";\n";
		os << "};";

		return os;
	}

private:
	Code code;
};

int main(void)
{
	auto cb = CodeBuilder{ "Person" }.add_field("name", "string").add_field("age", "int");
	cout << cb;
}