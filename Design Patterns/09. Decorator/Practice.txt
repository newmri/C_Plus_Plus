#include <string>
#include <iostream>
using namespace std;

struct Flower
{
	virtual string str() = 0;
};

struct Rose : Flower
{
	string str() override {
		return "A rose";
	}
};

struct RedFlower : Flower
{
	Flower& flower;
	RedFlower(Flower& flower) : flower(flower) {}
	string str() override {
		auto _str = flower.str();
		if (string::npos == _str.find("that"))
			_str += " that is red";
		else if (string::npos == _str.find("and"))
			_str += " and red";

		return _str;
	}
};

struct BlueFlower : Flower
{
	Flower& flower;
	BlueFlower(Flower& flower) : flower(flower) {}
	string str() override {
		auto _str = flower.str();
		if (string::npos == _str.find("that"))
			_str += " that is blue";
		else if(string::npos == _str.find("and"))
			_str += " and blue";

		return _str;
	}
};

int main()
{
	Rose rose;
	RedFlower red_rose{ rose };
	RedFlower red_red_rose{ red_rose };
	BlueFlower blue_red_rose{ red_rose };
	cout << rose.str() << endl;          // "A rose"
	cout << red_rose.str() << endl;      // "A rose that is red"
	cout << red_red_rose.str() << endl;  // "A rose that is red"
	cout << blue_red_rose.str() << endl; // "A rose that is red and blue"
}